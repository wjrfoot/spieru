/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package gov.usda.ars.spieru.durum;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author wjrfo
 */
public class DurumDialog extends javax.swing.JDialog {

    private Config config = new Config();
    private File inputFile = null;
    String durumDialogTitle = null;
    
    /**
     * Creates new form DurumDialog
     */
    public DurumDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadConfig();
        durumDialogTitle = this.getTitle();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPFindParticles = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTFFindParticlesminSize = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTFFindParticlesmaxSize = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTFFindParticlesminCirc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTFFindParticlesmaxCirc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPBaseAnalysis = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTFKernellowThres = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTFKernelhighThres = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTFKernelminSize = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTFKernelmaxSize = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTFKernelminCirc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTFKernelmaxCirc = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPChalkAnalysis = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTFChalklowThres = new javax.swing.JTextField();
        jTFChalkhighThres = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTFChalkminSize = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTFChalkmaxSize = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTFChalkminCirc = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTFChalkmaxCirc = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPButtons = new javax.swing.JPanel();
        jBLoad = new javax.swing.JButton();
        jBRun = new javax.swing.JButton();
        jBConfig = new javax.swing.JButton();
        jBExit = new javax.swing.JButton();
        jBAbout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Durum Grading");

        jPFindParticles.setBorder(javax.swing.BorderFactory.createTitledBorder("Find Particles"));

        jLabel2.setText("Analyze Particles");

        jTFFindParticlesminSize.setText("jTextField1");
        jTFFindParticlesminSize.setMinimumSize(new java.awt.Dimension(20, 20));
        jTFFindParticlesminSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFFindParticlesminSizeFocusLost(evt);
            }
        });
        jTFFindParticlesminSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFFindParticlesminSizeActionPerformed(evt);
            }
        });

        jLabel5.setText("Min Size");

        jTFFindParticlesmaxSize.setText("jTextField1");
        jTFFindParticlesmaxSize.setMinimumSize(new java.awt.Dimension(20, 20));
        jTFFindParticlesmaxSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFFindParticlesmaxSizeFocusLost(evt);
            }
        });
        jTFFindParticlesmaxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFFindParticlesmaxSizeActionPerformed(evt);
            }
        });

        jLabel6.setText("Max Size");

        jTFFindParticlesminCirc.setText("jTextField1");
        jTFFindParticlesminCirc.setMinimumSize(new java.awt.Dimension(20, 20));
        jTFFindParticlesminCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFFindParticlesminCircFocusLost(evt);
            }
        });
        jTFFindParticlesminCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFFindParticlesminCircActionPerformed(evt);
            }
        });

        jLabel7.setText("Min Circ");

        jTFFindParticlesmaxCirc.setText("jTextField1");
        jTFFindParticlesmaxCirc.setMinimumSize(new java.awt.Dimension(20, 20));
        jTFFindParticlesmaxCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFFindParticlesmaxCircFocusLost(evt);
            }
        });
        jTFFindParticlesmaxCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFFindParticlesmaxCircActionPerformed(evt);
            }
        });

        jLabel8.setText("Max Circ");

        javax.swing.GroupLayout jPFindParticlesLayout = new javax.swing.GroupLayout(jPFindParticles);
        jPFindParticles.setLayout(jPFindParticlesLayout);
        jPFindParticlesLayout.setHorizontalGroup(
            jPFindParticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFindParticlesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jTFFindParticlesminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jTFFindParticlesmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jTFFindParticlesminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jTFFindParticlesmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPFindParticlesLayout.setVerticalGroup(
            jPFindParticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPFindParticlesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPFindParticlesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jTFFindParticlesminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTFFindParticlesmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTFFindParticlesminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTFFindParticlesmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPBaseAnalysis.setBorder(javax.swing.BorderFactory.createTitledBorder("Kernel Analysis"));

        jLabel9.setText("Threshold");

        jLabel11.setText("Low");

        jTFKernellowThres.setText("jTextField1");
        jTFKernellowThres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernellowThresFocusLost(evt);
            }
        });
        jTFKernellowThres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernellowThresActionPerformed(evt);
            }
        });

        jLabel12.setText("High");

        jTFKernelhighThres.setText("jTextField1");
        jTFKernelhighThres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernelhighThresFocusLost(evt);
            }
        });
        jTFKernelhighThres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelhighThresActionPerformed(evt);
            }
        });

        jLabel10.setText("Analyze Particles");

        jTFKernelminSize.setText("jTextField1");
        jTFKernelminSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernelminSizeFocusLost(evt);
            }
        });
        jTFKernelminSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelminSizeActionPerformed(evt);
            }
        });

        jLabel13.setText("Min Size");

        jTFKernelmaxSize.setText("jTextField1");
        jTFKernelmaxSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernelmaxSizeFocusLost(evt);
            }
        });
        jTFKernelmaxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelmaxSizeActionPerformed(evt);
            }
        });

        jLabel14.setText("Max Size");

        jTFKernelminCirc.setText("jTextField1");
        jTFKernelminCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernelminCircFocusLost(evt);
            }
        });
        jTFKernelminCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelminCircActionPerformed(evt);
            }
        });

        jLabel15.setText("Min Circ");

        jTFKernelmaxCirc.setText("jTextField1");
        jTFKernelmaxCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKernelmaxCircFocusLost(evt);
            }
        });
        jTFKernelmaxCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKernelmaxCircActionPerformed(evt);
            }
        });

        jLabel16.setText("Max Circ");

        javax.swing.GroupLayout jPBaseAnalysisLayout = new javax.swing.GroupLayout(jPBaseAnalysis);
        jPBaseAnalysis.setLayout(jPBaseAnalysisLayout);
        jPBaseAnalysisLayout.setHorizontalGroup(
            jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernelminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernellowThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernelhighThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernelmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernelminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jTFKernelmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPBaseAnalysisLayout.setVerticalGroup(
            jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBaseAnalysisLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jTFKernellowThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jTFKernelhighThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPBaseAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(jTFKernelminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTFKernelmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jTFKernelminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTFKernelmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPChalkAnalysis.setBorder(javax.swing.BorderFactory.createTitledBorder("Chalk Analysis"));

        jLabel17.setText("Threshold");

        jLabel18.setText("Analyze Particles");

        jLabel19.setText("Low");

        jTFChalklowThres.setText("jTextField1");
        jTFChalklowThres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalklowThresFocusLost(evt);
            }
        });
        jTFChalklowThres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalklowThresActionPerformed(evt);
            }
        });

        jTFChalkhighThres.setText("jTextField1");
        jTFChalkhighThres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalkhighThresFocusLost(evt);
            }
        });
        jTFChalkhighThres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkhighThresActionPerformed(evt);
            }
        });

        jLabel20.setText("High");

        jTFChalkminSize.setText("jTextField1");
        jTFChalkminSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalkminSizeFocusLost(evt);
            }
        });
        jTFChalkminSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkminSizeActionPerformed(evt);
            }
        });

        jLabel21.setText("Min Size");

        jTFChalkmaxSize.setText("jTextField1");
        jTFChalkmaxSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalkmaxSizeFocusLost(evt);
            }
        });
        jTFChalkmaxSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkmaxSizeActionPerformed(evt);
            }
        });

        jLabel22.setText("Max Size");

        jTFChalkminCirc.setText("jTextField1");
        jTFChalkminCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalkminCircFocusLost(evt);
            }
        });
        jTFChalkminCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkminCircActionPerformed(evt);
            }
        });

        jLabel23.setText("Min Circ");

        jTFChalkmaxCirc.setText("jTextField1");
        jTFChalkmaxCirc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFChalkmaxCircFocusLost(evt);
            }
        });
        jTFChalkmaxCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFChalkmaxCircActionPerformed(evt);
            }
        });

        jLabel24.setText("Max Circ");

        javax.swing.GroupLayout jPChalkAnalysisLayout = new javax.swing.GroupLayout(jPChalkAnalysis);
        jPChalkAnalysis.setLayout(jPChalkAnalysisLayout);
        jPChalkAnalysisLayout.setHorizontalGroup(
            jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalkminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalklowThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalkhighThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalkmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalkminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(jTFChalkmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPChalkAnalysisLayout.setVerticalGroup(
            jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPChalkAnalysisLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jTFChalklowThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jTFChalkhighThres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPChalkAnalysisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel21)
                    .addComponent(jTFChalkminSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jTFChalkmaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTFChalkminCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jTFChalkmaxCirc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jBLoad.setText("Load");
        jBLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLoadActionPerformed(evt);
            }
        });

        jBRun.setText("Run");
        jBRun.setEnabled(false);
        jBRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRunActionPerformed(evt);
            }
        });

        jBConfig.setText("Save Config");
        jBConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfigActionPerformed(evt);
            }
        });

        jBExit.setText("Exit");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        jBAbout.setText("About");
        jBAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAboutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPButtonsLayout = new javax.swing.GroupLayout(jPButtons);
        jPButtons.setLayout(jPButtonsLayout);
        jPButtonsLayout.setHorizontalGroup(
            jPButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPButtonsLayout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jBRun)
                .addGap(35, 35, 35)
                .addComponent(jBConfig)
                .addGap(47, 47, 47)
                .addComponent(jBExit)
                .addGap(52, 52, 52)
                .addComponent(jBAbout)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPButtonsLayout.createSequentialGroup()
                    .addGap(52, 52, 52)
                    .addComponent(jBLoad)
                    .addContainerGap(552, Short.MAX_VALUE)))
        );
        jPButtonsLayout.setVerticalGroup(
            jPButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConfig)
                    .addComponent(jBRun)
                    .addComponent(jBExit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPButtonsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jBLoad)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPBaseAnalysis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPFindParticles, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPChalkAnalysis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPFindParticles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPBaseAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPChalkAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLoadActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fileChooser.setFileHidingEnabled(false);
        fileChooser.setMultiSelectionEnabled(false);
        
        Config fileConfig = new Config();
        fileConfig.loadProperties();
//        File dirF = new File(System.getProperty("user.dir"), "images");
//        fileChooser.setCurrentDirectory(dirF);
        String dir = fileConfig.getLastImageDirectory();
        File dirF = new File(fileConfig.getLastImageDirectory());
        fileChooser.setCurrentDirectory(dirF);
//        fileChooser.setCurrentDirectory(new File(lastInputDirectory));
        fileChooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File arg0) {
                String fileName = arg0.getName();
                return fileName.endsWith("tif") || fileName.endsWith("bmp") || fileName.endsWith("png")
                        || arg0.isDirectory();
            }

            @Override
            public String getDescription() {
                return "Must be tif, bmp or png";
            }
        });

        
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
//            fils = fileChooser.getSelectedFiles();
//            System.out.println("selected file: " + fileChooser.getSelectedFile().getAbsolutePath());
            inputFile = fileChooser.getSelectedFile();
            jBRun.setEnabled(true);
            setTitle(durumDialogTitle + " - " + inputFile.getName());
            fileConfig.setLastImageDirectory(inputFile.getParent());
            fileConfig.saveProperties();
            config.setLastImageDirectory(inputFile.getParent());
        }
        
//        try {
//            config.setLastInputDirectory(fils[0].getCanonicalFile().getParent());
//        } catch (IOException ex) {
//            Logger.getLogger(gov.usda.ars.spieru.flour.MainDialog.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        jBAnalyze.setEnabled(true);

    }//GEN-LAST:event_jBLoadActionPerformed
    
    private void jBRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRunActionPerformed
        AnalyzeScan analyze = new AnalyzeScan(inputFile.getAbsolutePath(), config);
        analyze.analyze();
        jBRun.setEnabled(false);
    }//GEN-LAST:event_jBRunActionPerformed

    private void jBConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfigActionPerformed
        config.saveProperties();
    }//GEN-LAST:event_jBConfigActionPerformed

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBExitActionPerformed

    private void jBAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAboutActionPerformed
        new About(null, true).setVisible(true);
    }//GEN-LAST:event_jBAboutActionPerformed

//<editor-fold defaultstate="collapsed" desc="actionPerformed/focusLost handlers">

    private void jTFFindParticlesminSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFFindParticlesminSizeActionPerformed
        config.setMinSizeFindParticles(((JTextField) evt.getSource()).getText());        // TODO add your handling code here:
    }//GEN-LAST:event_jTFFindParticlesminSizeActionPerformed

    private void jTFFindParticlesminSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFFindParticlesminSizeFocusLost
        config.setMinSizeKernel(((JTextField) evt.getSource()).getText());        // TODO add your handling code here:
    }//GEN-LAST:event_jTFFindParticlesminSizeFocusLost

    private void jTFFindParticlesmaxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFFindParticlesmaxSizeActionPerformed
        config.setMaxSizeFindParticles(((JTextField) evt.getSource()).getText());        // TODO add your handling code here:
    }//GEN-LAST:event_jTFFindParticlesmaxSizeActionPerformed

    private void jTFFindParticlesmaxSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFFindParticlesmaxSizeFocusLost
        config.setMaxSizeFindParticles(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFFindParticlesmaxSizeFocusLost

    private void jTFFindParticlesminCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFFindParticlesminCircActionPerformed
        config.setMinCircFindParticles(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFFindParticlesminCircActionPerformed

    private void jTFFindParticlesminCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFFindParticlesminCircFocusLost
        config.setMinCircFindParticles(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFFindParticlesminCircFocusLost

    private void jTFFindParticlesmaxCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFFindParticlesmaxCircActionPerformed
        config.setMaxCircFindParticles(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFFindParticlesmaxCircActionPerformed

    private void jTFFindParticlesmaxCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFFindParticlesmaxCircFocusLost
        config.setMaxCircFindParticles(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFFindParticlesmaxCircFocusLost

    private void jTFKernellowThresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernellowThresActionPerformed
        config.setLowThresholdKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernellowThresActionPerformed

    private void jTFKernellowThresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernellowThresFocusLost
        config.setLowThresholdKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernellowThresFocusLost

    private void jTFKernelhighThresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelhighThresActionPerformed
        config.setHiThresholdKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelhighThresActionPerformed

    private void jTFKernelhighThresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernelhighThresFocusLost
        config.setHiThresholdKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelhighThresFocusLost

    private void jTFKernelminSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelminSizeActionPerformed
        config.setMinSizeKernel(((JTextField) evt.getSource()).getText());        
    }//GEN-LAST:event_jTFKernelminSizeActionPerformed

    private void jTFKernelminSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernelminSizeFocusLost
        config.setMinSizeKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelminSizeFocusLost

    private void jTFKernelmaxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelmaxSizeActionPerformed
        config.setMaxSizeKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelmaxSizeActionPerformed

    private void jTFKernelmaxSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernelmaxSizeFocusLost
        config.setMaxSizeKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelmaxSizeFocusLost

    private void jTFKernelminCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelminCircActionPerformed
        config.setMinCircKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelminCircActionPerformed

    private void jTFKernelminCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernelminCircFocusLost
        config.setMinCircKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelminCircFocusLost

    private void jTFKernelmaxCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKernelmaxCircActionPerformed
        config.setMaxCircKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelmaxCircActionPerformed

    private void jTFKernelmaxCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKernelmaxCircFocusLost
        config.setMaxCircKernel(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFKernelmaxCircFocusLost

    private void jTFChalklowThresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalklowThresActionPerformed
        config.setLowThresholdChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalklowThresActionPerformed

    private void jTFChalklowThresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalklowThresFocusLost
        config.setLowThresholdChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalklowThresFocusLost

    private void jTFChalkhighThresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkhighThresActionPerformed
        config.setHiThresholdChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkhighThresActionPerformed

    private void jTFChalkhighThresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalkhighThresFocusLost
        config.setHiThresholdChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkhighThresFocusLost

    private void jTFChalkminSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkminSizeActionPerformed
        config.setMinSizeChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkminSizeActionPerformed

    private void jTFChalkminSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalkminSizeFocusLost
        config.setMinSizeChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkminSizeFocusLost

    private void jTFChalkmaxSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkmaxSizeActionPerformed
        config.setMaxSizeChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkmaxSizeActionPerformed

    private void jTFChalkmaxSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalkmaxSizeFocusLost
        config.setMaxSizeChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkmaxSizeFocusLost

    private void jTFChalkminCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkminCircActionPerformed
        config.setMinCircChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkminCircActionPerformed

    private void jTFChalkminCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalkminCircFocusLost
        config.setMinCircChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkminCircFocusLost

    private void jTFChalkmaxCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFChalkmaxCircActionPerformed
        config.setMaxCircChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkmaxCircActionPerformed

    private void jTFChalkmaxCircFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFChalkmaxCircFocusLost
        config.setMaxCircChalk(((JTextField) evt.getSource()).getText());
    }//GEN-LAST:event_jTFChalkmaxCircFocusLost

    private void jTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFFocusGained
        JTextField jtf = (JTextField) evt.getSource();
        jtf.selectAll();
    }//GEN-LAST:event_jTFFocusGained

//</editor-fold>

    private void loadConfig() {
        config.loadProperties();

        jTFFindParticlesmaxCirc.setText(config.getMaxCircFindParticles());
        jTFFindParticlesmaxSize.setText(config.getMaxSizeFindParticles());
        jTFFindParticlesminCirc.setText(config.getMinCircFindParticles());
        jTFFindParticlesminSize.setText(config.getMinSizeFindParticles());

        jTFKernelhighThres.setText(config.getHiThresholdKernel());
        jTFKernellowThres.setText(config.getLowThresholdKernel());
        jTFKernelmaxCirc.setText(config.getMaxCircKernel());
        jTFKernelmaxSize.setText(config.getMaxSizeKernel());
        jTFKernelminCirc.setText(config.getMinCircKernel());
        jTFKernelminSize.setText(config.getMinSizeKernel());

        jTFChalkhighThres.setText(config.getHiThresholdChalk());
        jTFChalklowThres.setText(config.getLowThresholdChalk());
        jTFChalkmaxCirc.setText(config.getMaxCircChalk());
        jTFChalkmaxSize.setText(config.getMaxSizeChalk());
        jTFChalkminCirc.setText(config.getMinCircChalk());
        jTFChalkminSize.setText(config.getMinSizeChalk());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DurumDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DurumDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DurumDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DurumDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DurumDialog dialog = new DurumDialog(new javax.swing.JFrame(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAbout;
    private javax.swing.JButton jBConfig;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBLoad;
    private javax.swing.JButton jBRun;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPBaseAnalysis;
    private javax.swing.JPanel jPButtons;
    private javax.swing.JPanel jPChalkAnalysis;
    private javax.swing.JPanel jPFindParticles;
    private javax.swing.JTextField jTFChalkhighThres;
    private javax.swing.JTextField jTFChalklowThres;
    private javax.swing.JTextField jTFChalkmaxCirc;
    private javax.swing.JTextField jTFChalkmaxSize;
    private javax.swing.JTextField jTFChalkminCirc;
    private javax.swing.JTextField jTFChalkminSize;
    private javax.swing.JTextField jTFFindParticlesmaxCirc;
    private javax.swing.JTextField jTFFindParticlesmaxSize;
    private javax.swing.JTextField jTFFindParticlesminCirc;
    private javax.swing.JTextField jTFFindParticlesminSize;
    private javax.swing.JTextField jTFKernelhighThres;
    private javax.swing.JTextField jTFKernellowThres;
    private javax.swing.JTextField jTFKernelmaxCirc;
    private javax.swing.JTextField jTFKernelmaxSize;
    private javax.swing.JTextField jTFKernelminCirc;
    private javax.swing.JTextField jTFKernelminSize;
    // End of variables declaration//GEN-END:variables
}
